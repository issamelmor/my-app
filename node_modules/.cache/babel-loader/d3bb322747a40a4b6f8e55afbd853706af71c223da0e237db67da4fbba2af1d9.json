{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issam\\\\Documents\\\\Code projects\\\\my-app\\\\src\\\\components\\\\Login\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { OtpGroup, OtpInput } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginBlock(_ref) {\n  _s();\n  let {\n    value,\n    valueLength,\n    onChange\n  } = _ref;\n  const valueItems = useMemo(() => {\n    const valueArray = value.split('');\n    const items = [];\n    for (let i = 0; i < valueLength; i++) {\n      const char = valueArray[i];\n      if (RE_DIGIT.test(char)) {\n        items.push(char);\n      } else {\n        items.push('');\n      }\n    }\n    return items;\n  }, [value, valueLength]);\n  return /*#__PURE__*/_jsxDEV(OtpGroup, {\n    children: [1, 2, 3, 4, 5, 6].map((digit, idx) => /*#__PURE__*/_jsxDEV(OtpInput, {\n      type: \"text\",\n      inputMode: \"numeric\",\n      autoComplete: \"one-time-code\",\n      pattern: \"\\\\d{1}\",\n      maxLength: valueLength,\n      className: \"otp-input\",\n      value: digit\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginBlock, \"5rT/mrFS/h2gYreijxAkbtv06ak=\");\n_c = LoginBlock;\nvar _c;\n$RefreshReg$(_c, \"LoginBlock\");","map":{"version":3,"names":["OtpGroup","OtpInput","jsxDEV","_jsxDEV","LoginBlock","_ref","_s","value","valueLength","onChange","valueItems","useMemo","valueArray","split","items","i","char","RE_DIGIT","test","push","children","map","digit","idx","type","inputMode","autoComplete","pattern","maxLength","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/issam/Documents/Code projects/my-app/src/components/Login/index.tsx"],"sourcesContent":["import { OtpGroup, OtpInput } from \"./styles\";\r\n\r\nexport type Props = {\r\n  value: string;\r\n  valueLength: number;\r\n  onChange: (value: string) => void;\r\n};\r\n\r\nexport default function LoginBlock({ value, valueLength, onChange }: Props) {\r\n  const valueItems = useMemo(() => {\r\n    const valueArray = value.split('');\r\n    const items: Array<string> = [];\r\n\r\n    for (let i = 0; i < valueLength; i++) {\r\n      const char = valueArray[i];\r\n\r\n      if (RE_DIGIT.test(char)) {\r\n        items.push(char);\r\n      } else {\r\n        items.push('');\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }, [value, valueLength]);\r\n  return (\r\n    <OtpGroup>\r\n      {[1, 2, 3, 4, 5, 6].map((digit, idx) => (\r\n        <OtpInput\r\n          key={idx}\r\n          type=\"text\"\r\n          inputMode=\"numeric\"\r\n          autoComplete=\"one-time-code\"\r\n          pattern=\"\\d{1}\"\r\n          maxLength={valueLength}\r\n          className=\"otp-input\"\r\n          value={digit}\r\n        />\r\n      ))}\r\n    </OtpGroup>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9C,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAgB,CAAC,GAAAJ,IAAA;EACxE,MAAMK,UAAU,GAAGC,OAAO,CAAC,MAAM;IAC/B,MAAMC,UAAU,GAAGL,KAAK,CAACM,KAAK,CAAC,EAAE,CAAC;IAClC,MAAMC,KAAoB,GAAG,EAAE;IAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,WAAW,EAAEO,CAAC,EAAE,EAAE;MACpC,MAAMC,IAAI,GAAGJ,UAAU,CAACG,CAAC,CAAC;MAE1B,IAAIE,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC,EAAE;QACvBF,KAAK,CAACK,IAAI,CAACH,IAAI,CAAC;MAClB,CAAC,MAAM;QACLF,KAAK,CAACK,IAAI,CAAC,EAAE,CAAC;MAChB;IACF;IAEA,OAAOL,KAAK;EACd,CAAC,EAAE,CAACP,KAAK,EAAEC,WAAW,CAAC,CAAC;EACxB,oBACEL,OAAA,CAACH,QAAQ;IAAAoB,QAAA,EACN,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACjCpB,OAAA,CAACF,QAAQ;MAEPuB,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC,SAAS;MACnBC,YAAY,EAAC,eAAe;MAC5BC,OAAO,EAAC,QAAO;MACfC,SAAS,EAAEpB,WAAY;MACvBqB,SAAS,EAAC,WAAW;MACrBtB,KAAK,EAAEe;IAAM,GAPRC,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQT,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf;AAAC3B,EAAA,CAjCuBF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}