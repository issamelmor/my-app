{"version":3,"file":"static/js/873.cd342caf.chunk.js","mappings":"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","sources":["common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.voornaam) {\r\n    errors.voornaam = \"Verplicht\";\r\n  }\r\n  if (!values.achternaam) {\r\n    errors.achternaam = \"Verplicht\";\r\n  }\r\n  if ((values.email) && (!/\\S+@\\S+\\.\\S+/.test(values.email))) {\r\n    errors.email = \"Email adres is onjuist\";\r\n  } \r\n  if (!values.straat) {\r\n    errors.straat = \"Verplicht\";\r\n  }\r\n  if (!values.huisnummer) {\r\n    errors.huisnummer = \"Verplicht\";  \r\n  }\r\n  if (!values.postcode) {\r\n    errors.postcode = \"Verplicht\";\r\n  }\r\n  if (!values.plaats) {\r\n    errors.plaats = \"Verplicht\";\r\n  }\r\n  \r\n  if (!values.message) {\r\n    errors.message = \"Verplicht\";\r\n  }\r\n\r\n  \r\n  \r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: any;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 1.875rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n  padding-top: 1rem;\r\n\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    validate\r\n  ) as any;\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type];\r\n    return (\r\n      <Zoom direction=\"left\">\r\n        <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\">\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\">\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Row>\r\n              <Col span={7}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"voornaam\"\r\n                  placeholder=\"\"\r\n                  value={values.voornaam || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"voornaam\" />\r\n              </Col>\r\n              <Col span={7}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"tussenvoegsel\"\r\n                  placeholder=\"\"\r\n                  value={values.tussenvoegsel || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"tussenvoegsel\" />\r\n              </Col>\r\n              <Col span={10}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"achternaam\"\r\n                  placeholder=\"\"\r\n                  value={values.achternaam || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"achternaam\" />\r\n              </Col>\r\n              </Row>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Row>\r\n              <Col span={18}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"straat\"\r\n                  placeholder=\"Straatnaam\"\r\n                  value={values.straatnaam || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"straat\" />\r\n              </Col>\r\n              <Col span={6}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"huisnummer\"\r\n                  placeholder=\"Huisnr.\"\r\n                  value={values.huisnummer || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"huisnummer\" />\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col span={12}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"postcode\"\r\n                  placeholder=\"Postcode\"\r\n                  value={values.postcode || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"postcode\" />\r\n              </Col>\r\n              <Col span={12}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"plaats\"\r\n                  placeholder=\"Plaatsnaam\"\r\n                  value={values.plaats || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"plaats\" />\r\n              </Col>\r\n              </Row>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{t(\"Submit\")}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n"],"names":["useForm","validate","_useState","useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","shouldSubmit","setShouldSubmit","useEffect","Object","keys","length","notification","message","description","handleChange","event","persist","_objectSpread","_defineProperty","target","name","value","handleSubmit","preventDefault","axios","then","voornaam","achternaam","email","test","straat","huisnummer","postcode","plaats","Content","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","StyledInput","Label","placeholder","onChange","htmlFor","id","ContactContainer","FormGroup","Span","ButtonContainer","_templateObject4","_ref2","ValidationType","_ref3","type","ErrorMessage","Zoom","direction","erros","Row","justify","align","Col","lg","md","sm","xs","Slide","Block","autoComplete","onSubmit","span","Input","tussenvoegsel","straatnaam","Button"],"sourceRoot":""}